// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package main

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// __collectionLatestInput is used internally by genqlient
type __collectionLatestInput struct {
	CollectionId string `json:"collectionId"`
}

// GetCollectionId returns __collectionLatestInput.CollectionId, and is useful for accessing the field via an interface.
func (v *__collectionLatestInput) GetCollectionId() string { return v.CollectionId }

// __registerDeviceInput is used internally by genqlient
type __registerDeviceInput struct {
	DeviceId string `json:"deviceId"`
}

// GetDeviceId returns __registerDeviceInput.DeviceId, and is useful for accessing the field via an interface.
func (v *__registerDeviceInput) GetDeviceId() string { return v.DeviceId }

// collectionLatestCollectionLatestWallpaper includes the requested fields of the GraphQL type Wallpaper.
type collectionLatestCollectionLatestWallpaper struct {
	UnsplashUrl string `json:"unsplashUrl"`
}

// GetUnsplashUrl returns collectionLatestCollectionLatestWallpaper.UnsplashUrl, and is useful for accessing the field via an interface.
func (v *collectionLatestCollectionLatestWallpaper) GetUnsplashUrl() string { return v.UnsplashUrl }

// collectionLatestResponse is returned by collectionLatest on success.
type collectionLatestResponse struct {
	CollectionLatest collectionLatestCollectionLatestWallpaper `json:"collectionLatest"`
}

// GetCollectionLatest returns collectionLatestResponse.CollectionLatest, and is useful for accessing the field via an interface.
func (v *collectionLatestResponse) GetCollectionLatest() collectionLatestCollectionLatestWallpaper {
	return v.CollectionLatest
}

// registerDeviceResponse is returned by registerDevice on success.
type registerDeviceResponse struct {
	RegisterDevice string `json:"registerDevice"`
}

// GetRegisterDevice returns registerDeviceResponse.RegisterDevice, and is useful for accessing the field via an interface.
func (v *registerDeviceResponse) GetRegisterDevice() string { return v.RegisterDevice }

func collectionLatest(
	ctx context.Context,
	client graphql.Client,
	collectionId string,
) (*collectionLatestResponse, error) {
	req := &graphql.Request{
		OpName: "collectionLatest",
		Query: `
query collectionLatest ($collectionId: ID!) {
	collectionLatest(id: $collectionId) {
		unsplashUrl
	}
}
`,
		Variables: &__collectionLatestInput{
			CollectionId: collectionId,
		},
	}
	var err error

	var data collectionLatestResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func registerDevice(
	ctx context.Context,
	client graphql.Client,
	deviceId string,
) (*registerDeviceResponse, error) {
	req := &graphql.Request{
		OpName: "registerDevice",
		Query: `
mutation registerDevice ($deviceId: String!) {
	registerDevice(deviceId: $deviceId)
}
`,
		Variables: &__registerDeviceInput{
			DeviceId: deviceId,
		},
	}
	var err error

	var data registerDeviceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
